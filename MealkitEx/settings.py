"""
Django settings for MealkitEx project.

Generated by 'django-admin startproject' using Django 3.2.

For more information on this file, see
https://docs.djangoproject.com/en/3.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.2/ref/settings/
"""

from pathlib import Path
import os
# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

PAGE_SIZE = 6      # 한 페이지에 출력할 글의 수
PAGE_BLOCK = 3      # 페이지 넘기기에 보여줄 페이지 수





# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-iolvo#ktx1j_@!$!(e7-@378*k%18if+#wdc=-0*)3x_6v6r2f'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'mathfilters',
    'basket.apps.BasketConfig',
    'product.apps.ProductConfig',
    'order.apps.OrderConfig',
    'member.apps.MemberConfig',
    'search.apps.SearchConfig',
    'django_extensions',
    # 'review.apps.ReviewConfig',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

# 로깅
# logger.debug()
# logger.info()
# logger.warning()
# logger.error()
# logger.critical()
LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    # 포맷터 (텍스트의 포맷 형식 정의, 여러 포맷 정의 가능)
    'formatters': {
        'format1': {
            'format': '[%(asctime)s] %(levelname)s [%(name)s:%(lineno)s] %(message)s',
            'datefmt': "%Y-%m-%d %H:%M:%S"
        },
        'format2': {
            'format': '%(levelname)s %(message)s'
        },
    },
    # 핸들러 (로그 레코드로 무슨 작업을 할 것인지 정의, 여러 핸들러 정의 가능)
    'handlers': {
        # 로그 파일을 만들어 텍스트로 로그레코드 저장
        'file': {
            'level': 'INFO',
            'class': 'logging.handlers.RotatingFileHandler',
            'filename': os.path.join(BASE_DIR, 'log/logfile.log'),
            'encoding': 'UTF-8',
            'maxBytes': 1024 * 1024 * 5,  # 5 MB
            'backupCount': 5,
            'formatter': 'format1',
        },
        # 콘솔(터미널)에 출력
        'console': {
            'level': 'DEBUG',
            'class': 'logging.StreamHandler',
            'formatter': 'format2',
        }
    },
    'loggers': {
        # 로거 종류
        # 'django': {
        #     'handlers': ['file'],
        #     'propagate': True,
        #     'level': 'WARNING',
        # },
        # 'django.request': {
        #     'handlers':['file'],
        #     'propagate': True,
        #     'level':'WARNING',
        # },
        # 사용자 APP 지정
        'member': {
            'handlers': ['file'],
            'propagate': True,
            'level': 'INFO',
        },
        'basket': {
            'handlers': ['file'],
            'propagate': True,
            'level': 'INFO',
        },
        'order': {
            'handlers': ['file'],
            'propagate': True,
            'level': 'INFO',
        },
    },
}


ROOT_URLCONF = 'MealkitEx.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'member/templates'),
                os.path.join(BASE_DIR, 'static')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                'basket.context_processor.basket',
                
            ],
        },
    },
]

WSGI_APPLICATION = 'MealkitEx.wsgi.application'


# Database
# https://docs.djangoproject.com/en/3.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.mysql',
        'NAME': 'tjoeun',
        'USER': 'joeun',
        'PASSWORD': 'joeun',
        'HOST': 'localhost',
        'PORT': '3306',
    }
}



# Password validation
# https://docs.djangoproject.com/en/3.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/3.2/topics/i18n/

LANGUAGE_CODE = 'ko'

TIME_ZONE = 'Asia/Seoul'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.2/howto/static-files/

STATIC_URL = '/static/'

# Default primary key field type
# https://docs.djangoproject.com/en/3.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

MEDIA_URL = '/media/'
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')

BASKET_ID = 'basket item'

STATICFILES_DIRS = [
    os.path.join(BASE_DIR, 'static')
]

GRAPH_MODELS = {
  'all_applications': True,
  'group_models': True,
}

EMAIL_HOST = 'smtp.naver.com'
EMAIL_PORT = '587'
EMAIL_HOST_USER = 'frige304@naver.com'
EMAIL_HOST_PASSWORD = 'secret'
EMAIL_USE_TLS = True
DEFAULT_FROM_EMAIL = EMAIL_HOST_USER

ALLOWED_HOSTS = [ '192.168.10.9', '127.0.0.1', 'localhost' ]
